import pandas as pd
 from sklearn.model_selection import train_test_split
 from sklearn.preprocessing import LabelEncoder, StandardScaler
 from sklearn.cluster import KMeans
 from sklearn.metrics import silhouette_score

 # Загрузка и предобработка данных
 df = pd.read_csv("train.csv")
 df = df.drop(["PassengerId", "Name", "Ticket", "Cabin", "Survived"], axis=1) # Удаляем 'Survived' для кластеризации
 df["Embarked"].fillna(df["Embarked"].mode()[0], inplace=True)
 df["Age"].fillna(df["Age"].median(), inplace=True)

 # Кодировка категориальных признаков
 df["Sex"] = LabelEncoder().fit_transform(df["Sex"])
 df["Embarked"] = LabelEncoder().fit_transform(df["Embarked"])

 # Разделение данных
 X = df

 # Масштабирование признаков (важно для K-Means)
 scaler = StandardScaler()
 X_scaled = scaler.fit_transform(X)

 # Определение оптимального количества кластеров (пример с использованием силуэтного коэффициента)
 silhouette_scores = {}
 for n_clusters in range(2, 10):
     kmeans = KMeans(n_clusters=n_clusters, random_state=42, n_init='auto')
     cluster_labels = kmeans.fit_predict(X_scaled)
     silhouette_avg = silhouette_score(X_scaled, cluster_labels)
     silhouette_scores[n_clusters] = silhouette_avg

 best_n_clusters = max(silhouette_scores, key=silhouette_scores.get)
 print(f"Оптимальное количество кластеров (по силуэтному коэффициенту): {best_n_clusters}")

 # Обучение модели K-Means
 kmeans = KMeans(n_clusters=best_n_clusters, random_state=42, n_init='auto')
 clusters = kmeans.fit_predict(X_scaled)

 # Добавление меток кластеров в DataFrame
 df['Cluster'] = clusters

 # Вывод первых нескольких строк с метками кластеров
 print("\nПервые несколько строк DataFrame с метками кластеров:")
 print(df.head())

 # Оценка качества кластеризации (силуэтный коэффициент для лучшего количества кластеров)
 best_kmeans = KMeans(n_clusters=best_n_clusters, random_state=42, n_init='auto')
 best_clusters = best_kmeans.fit_predict(X_scaled)
 silhouette_avg_best = silhouette_score(X_scaled, best_clusters)
 print(f"\nСилуэтный коэффициент для {best_n_clusters} кластеров: {silhouette_avg_best}")
